@model EmployeeMVC.Models.CreateEditEmployeeViewModel

@{
    ViewBag.Title = "Create New Accredit Employee";
}

<style>
    div {
        font-family: Tahoma, Verdana, Segoe, sans-serif; 
        padding: 6px;
    }
</style>

<h2>Create New Accredit Employee</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => m.statuses)
    @Html.HiddenFor(m => m.departments)
    @Html.HiddenFor(m => m.employee.Status.StatusID, new { @id = "hndStatusID" })
    @Html.HiddenFor(m => m.employee.Department.DepartmentID, new { @id = "hndDeptID" })

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.employee.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.Email, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @style="width:200px"} })
                @Html.ValidationMessageFor(model => model.employee.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.StatusID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.employee.StatusID, Model.statuses, new { @id = "ddlStatuses", @class = "form-control", @style = "height:38px; width:350px;", @onchange = "setStatusID()" })
                @Html.ValidationMessageFor(model => model.employee.StatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.employee.DepartmentID, Model.departments, new { @id = "ddlDepartments", @class = "form-control", @style = "height:38px; width:350px;", @onchange = "setDeptID()" }) 
                @Html.ValidationMessageFor(model => model.employee.DepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.EmployeeNumber, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.EmployeeNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee.EmployeeNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee.IsActive)
            </div>
        </div>

        <div class="container">
            <div class="fixed">
                <button name="btnSaveEmployee" id="btnSaveEmployee" type="submit" title="Save and Create New Employee " class="btn btn-primary">Save and Create New Employee</button>
            </div>
            <div class="flex-item">
                <button name="btnBackToEmployees" id="btnBackToEmployees" title="Cancel / Back To Employee List" class="btn btn-secondary" onclick="location.href='@Url.Action( "Index","Employee")';return false;">Cancel / Back To Employee List</button>
            </div>
        </div>

    </div>
}


 @section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        
    <script>
         function setStatusID() {
             var ddlValue = $("#ddlStatuses option:selected").val();
             $("#hndStatusID").val(ddlValue);
         }

        function setDeptID() {
            var ddlValue = $("#ddlDepartments option:selected").val();
            $("#hndDeptID").val(ddlValue);
        }
    </script>
 }
